* {
  padding: 0;
  margin: 0;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  transition: 0.2s;
  --width-cube: 10px;
  --width-display: 50px;
  transform-style: preserve-3d;
}

@keyframes rotate {
  0% {
    transform: rotate3d(0, 1, 0, 0);
  }
  50% {
    transform: rotate3d(0, 1, 0, 360deg);
  }
  100% {
    transform: rotate3d(0, 0, 0, 0);
  }
}
html,
body {
  width: 100%;
  height: 100%;
}

body {
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  cursor: default;
}

body.click {
  cursor: crosshair;
}

h2 {
  position: fixed;
  bottom: 30px;
}

.setting, .actions, .container_models {
  pointer-events: none;
  position: fixed;
  height: auto;
  display: flex;
  flex-flow: column;
  justify-content: flex-start;
  align-items: flex-start;
  top: 0;
  left: 0;
  padding: 10px;
  gap: 5px;
  box-sizing: border-box;
  z-index: 3;
}
.setting form, .actions form, .container_models form {
  margin-top: 5px;
}

.container_models {
  display: flex;
  height: 100%;
  flex-flow: column;
  justify-content: flex-start;
  align-items: center;
  left: auto;
  top: 0;
  right: 0;
}
.container_models button {
  margin: 5px 0;
  width: 100%;
}
.container_models .model {
  pointer-events: all;
  width: 100%;
  height: 60px;
  animation: rotate 10s linear;
  animation-iteration-count: infinite;
  cursor: pointer;
}
.container_models .model .container-cube {
  width: auto;
  height: auto;
}
.container_models .model:hover {
  animation: none;
  background-color: rgba(0, 0, 0, 0.0666666667);
}

.actions {
  width: 100%;
  flex-flow: column;
  justify-content: flex-start;
  align-items: flex-start;
  top: initial;
  bottom: 0;
  left: 0;
  box-sizing: border-box;
  white-space: nowrap;
}
.actions .buttons {
  width: 100%;
  display: flex;
  flex-flow: row;
  justify-content: flex-start;
  align-items: center;
  gap: 5px 5px;
}
.actions .buttons form {
  margin: 0;
}
.actions .inputs {
  width: 100%;
  height: auto;
  display: flex;
  flex-flow: column;
  justify-content: flex-start;
  align-items: center;
  gap: 5px;
  box-sizing: border-box;
}

form {
  display: flex;
  flex-flow: row;
  justify-content: flex-start;
  align-items: center;
  width: auto;
  gap: 5px;
}

.container-cube, .model {
  display: flex;
  width: 100%;
  height: 100%;
  flex-flow: column;
  justify-content: center;
  align-items: center;
}

.display {
  pointer-events: none;
  scale: 3;
  width: var(--width-display);
  height: var(--width-display);
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  transform: rotateY(15deg) rotateX(-15deg);
  z-index: 2;
}
.display .preview {
  pointer-events: none;
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: flex-start;
  align-items: flex-start;
  padding: 2px;
  width: 100%;
  height: 100%;
  color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.3333333333);
  box-sizing: border-box;
  background-color: rgba(255, 255, 255, 0);
  color: rgba(0, 0, 0, 0);
  font-size: 5px;
}
.display .preview.click {
  background-color: rgba(0, 0, 0, 0.1333333333);
  color: rgba(0, 0, 0, 0.6);
}
.display .front {
  transform: translateZ(calc(var(--width-display) / 2));
}
.display .right {
  transform: rotateY(90deg) translateZ(calc(var(--width-display) / 2));
}
.display .back {
  background-color: rgba(255, 255, 255, 0.1333333333);
  filter: brightness(80%);
  transform: rotateY(180deg) translateZ(calc(var(--width-display) / 2));
}
.display .left {
  background-color: rgba(255, 255, 255, 0.1333333333);
  filter: brightness(80%);
  transform: rotateY(-90deg) translateZ(calc(var(--width-display) / 2));
}
.display .top {
  transform: rotateX(90deg) translateZ(calc(var(--width-display) / 2));
}
.display .bottom {
  background-color: rgba(255, 255, 255, 0.1333333333);
  filter: brightness(60%);
  transform: rotateY(180deg) rotateX(90deg) translateZ(calc(-1 * var(--width-display) / 2));
}

.cube {
  pointer-events: all;
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--width-cube);
  height: var(--width-cube);
  cursor: pointer;
}
.cube .face {
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--width-cube);
  height: var(--width-cube);
  color: #fff;
  box-sizing: border-box;
  background-color: #635985;
  border: none;
}
.cube .front {
  transform: translateZ(calc(var(--width-cube) / 2));
}
.cube .right {
  transform: rotateY(90deg) translateZ(calc(var(--width-cube) / 2));
}
.cube .back {
  filter: brightness(70%);
  transform: rotateY(180deg) translateZ(calc(var(--width-cube) / 2));
}
.cube .left {
  filter: brightness(70%);
  transform: rotateY(-90deg) translateZ(calc(var(--width-cube) / 2));
}
.cube .top {
  transform: rotateX(90deg) translateZ(calc(var(--width-cube) / 2));
}
.cube .bottom {
  filter: brightness(50%);
  direction: rtl;
  transform: rotateY(180deg) rotateX(90deg) translateZ(calc(-1 * var(--width-cube) / 2));
}

input,
button {
  pointer-events: all;
  padding: 5px;
  border: 1px solid #234;
  border-radius: 10px;
}

button {
  cursor: pointer;
}

button:hover, button.click {
  filter: brightness(80%);
}

summary {
  cursor: pointer;
  pointer-events: all;
  background-color: rgba(119, 136, 153, 0.9333333333);
  color: #fff;
  padding: 10px;
  border-radius: 10px;
  border: 1px solid #234;
  width: auto;
}/*# sourceMappingURL=style.css.map */